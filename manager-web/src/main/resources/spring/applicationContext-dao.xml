<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd">
       
    <!-- 加载配置文件 /manager-web/src/main/resources/resource/db.properties-->
    <context:property-placeholder location="classpath:resource/db.properties" />
    
    <!-- 数据源 使用dbcp -->
    <bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource" 
    	destroy-method="close">
    	<property name="driverClassName" value="${mysqljdbc.driver}"/>
        <property name="url" value="${mysqljdbc.url}"/>
        <property name="username" value="${mysqljdbc.username}"/>
        <property name="password" value="${mysqljdbc.password}"/>
        
        <property name="maxActive" value="10" />
        <property name="maxIdle" value="5"/>
    </bean>
	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource1"/>
	</bean>
		
	<!-- mapper的批量扫描，从mapper的包中扫描出mapper接口，自动创建对象并且再spring容器中注册 
		遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且再一个目录中
		自动扫描出来的mapper的bean的id为mapper类名（首字母小写）-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名 
			如果扫描多个包，每个包中间用半角逗号分隔-->
		<property name="basePackage" value="com.taotao.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"/>
	</bean>
</beans>

